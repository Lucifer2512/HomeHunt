// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(HomeHuntContext))]
    [Migration("20241111184519_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApartmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bathrooms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bedrooms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FurnitureCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("PropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("post_id_primary");

                    b.HasIndex("UserId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("role_id_primary");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f82ec39-63e6-4cd4-95d2-091a656ae301"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 951, DateTimeKind.Utc).AddTicks(5818),
                            Name = "Admin",
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 951, DateTimeKind.Utc).AddTicks(5829)
                        },
                        new
                        {
                            Id = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 951, DateTimeKind.Utc).AddTicks(5832),
                            Name = "Customer",
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 951, DateTimeKind.Utc).AddTicks(5832)
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TransactionCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("transaction_id_primary");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("user_id_primary");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("user_email_unique")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("user_Username_unique");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("259b3c67-a831-45e9-b60b-138d7a82df22"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 951, DateTimeKind.Utc).AddTicks(5966),
                            FullName = "Admin 1",
                            Password = "YrsnmFXnqf38PVKLlpeks1QlqFxFgCirL6D/g50pmLex+iy8",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("8f82ec39-63e6-4cd4-95d2-091a656ae301"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 951, DateTimeKind.Utc).AddTicks(5966),
                            Username = "Admin1"
                        },
                        new
                        {
                            Id = new Guid("5980cd49-2258-4f11-8f15-14cd6d5ee63e"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 954, DateTimeKind.Utc).AddTicks(5459),
                            FullName = "Admin 2",
                            Password = "iO5E3YcWy4cTlpvgCwgEsnXmptoR876Q6ielWoX2TY1TliQA",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("8f82ec39-63e6-4cd4-95d2-091a656ae301"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 954, DateTimeKind.Utc).AddTicks(5460),
                            Username = "Admin2"
                        },
                        new
                        {
                            Id = new Guid("b4fe710e-a9d8-40bc-a9c3-47e4287f29bc"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 957, DateTimeKind.Utc).AddTicks(3118),
                            FullName = "Customer 1",
                            Password = "KDoU+dR049bc1p6ClpxHJQBGB1yYEY7jTmwEGHU0nPBGW9J4",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 957, DateTimeKind.Utc).AddTicks(3120),
                            Username = "Customer1"
                        },
                        new
                        {
                            Id = new Guid("91d993ce-7c07-4647-8c7f-be94ebf338bc"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 960, DateTimeKind.Utc).AddTicks(2091),
                            FullName = "Customer 2",
                            Password = "Rv6KnnXqe+Uu+c3OszrAF0I0y6TxOSZybTvY9lMToD335W32",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 960, DateTimeKind.Utc).AddTicks(2091),
                            Username = "Customer2"
                        },
                        new
                        {
                            Id = new Guid("42582052-3372-4af3-b92e-08e4b693624b"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 962, DateTimeKind.Utc).AddTicks(9945),
                            FullName = "Customer 3",
                            Password = "ITFKJ+Y7UIFacYkXkXXxYXFZ1x8Ji0CMMz/7alleelwJ1ZiG",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 962, DateTimeKind.Utc).AddTicks(9946),
                            Username = "Customer3"
                        },
                        new
                        {
                            Id = new Guid("8b4f2efc-6cca-4552-9495-e1acc956ebf3"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 965, DateTimeKind.Utc).AddTicks(8260),
                            FullName = "Customer 4",
                            Password = "ZuCKPNcqLkR9ZsWIa9/5xYvtrvYt8ycxB51+4dGS4LKwOt2g",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 965, DateTimeKind.Utc).AddTicks(8260),
                            Username = "Customer4"
                        },
                        new
                        {
                            Id = new Guid("480f467e-584a-4db8-b09c-2d048e27bdad"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 968, DateTimeKind.Utc).AddTicks(6626),
                            FullName = "Customer 5",
                            Password = "CrNO3VJd5XKVcYsR6Aywf2exFuq8ci60eJrQnfKL53msguGh",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 968, DateTimeKind.Utc).AddTicks(6626),
                            Username = "Customer5"
                        },
                        new
                        {
                            Id = new Guid("66b1903d-7530-46aa-8238-fc977826b0d7"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 972, DateTimeKind.Utc).AddTicks(7573),
                            FullName = "Customer 6",
                            Password = "pXnUH3RIpnIDtpuZgCN2Q420Y3zWsaqVRxM8gVqrOFznIDPe",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 972, DateTimeKind.Utc).AddTicks(7581),
                            Username = "Customer6"
                        },
                        new
                        {
                            Id = new Guid("fbddcf19-f506-46be-80ef-1077d2ee2ddb"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 975, DateTimeKind.Utc).AddTicks(6142),
                            FullName = "Customer 7",
                            Password = "Bu+vhbaXlVJECpQ/qDXt1o21F6q6ghMRIMpcBJZkYgyM8FPh",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 975, DateTimeKind.Utc).AddTicks(6142),
                            Username = "Customer7"
                        },
                        new
                        {
                            Id = new Guid("f326a3b8-f525-42ed-b58a-fc13ad62ed3d"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 978, DateTimeKind.Utc).AddTicks(3869),
                            FullName = "Customer 8",
                            Password = "bRNYnDTlgxF+fn7rYCL0y8SjVXgF6JXk+wxu7RFmOZnWTLVP",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 978, DateTimeKind.Utc).AddTicks(3869),
                            Username = "Customer8"
                        },
                        new
                        {
                            Id = new Guid("c140c022-70f5-4f42-bf13-a0cf1af88417"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 981, DateTimeKind.Utc).AddTicks(4061),
                            FullName = "Customer 9",
                            Password = "11Io8BY+uQTkbGRYRVfNlJig+fHEJBb6SBO4vPAqXDDz5KUj",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 981, DateTimeKind.Utc).AddTicks(4063),
                            Username = "Customer9"
                        },
                        new
                        {
                            Id = new Guid("baadd74a-09f6-4023-b85c-18867760df39"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 984, DateTimeKind.Utc).AddTicks(1857),
                            FullName = "Customer 10",
                            Password = "h7kZ6EDoct7YuQoQizVYlbFKMxkdfAnRVPfSnEk5lEmJrhKn",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 984, DateTimeKind.Utc).AddTicks(1857),
                            Username = "Customer10"
                        },
                        new
                        {
                            Id = new Guid("86d2c664-e2f9-408a-94e9-3210cc46b89c"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 986, DateTimeKind.Utc).AddTicks(9532),
                            FullName = "Customer 11",
                            Password = "DGVJ9I8UqB4ks3Fvjw9sfM/c5Nh7bSD592UFfTFAD9uT9BYs",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 986, DateTimeKind.Utc).AddTicks(9532),
                            Username = "Customer11"
                        },
                        new
                        {
                            Id = new Guid("5fa95a35-c5c6-4f30-ae3a-3352dae893f5"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 990, DateTimeKind.Utc).AddTicks(1269),
                            FullName = "Customer 12",
                            Password = "31L68eBWqYDaC7KwkELSo9iif0IbY79xM7zN4T+D/tL0X+QV",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 990, DateTimeKind.Utc).AddTicks(1272),
                            Username = "Customer12"
                        },
                        new
                        {
                            Id = new Guid("7c932580-58d3-4a0e-8243-082adc079e4c"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 993, DateTimeKind.Utc).AddTicks(2394),
                            FullName = "Customer 13",
                            Password = "yh4VgjPYU/XFwf7uQuWRjBxY7Z0eetRxQveveQv6w0cDN6JI",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 993, DateTimeKind.Utc).AddTicks(2395),
                            Username = "Customer13"
                        },
                        new
                        {
                            Id = new Guid("52c00960-f9b3-400a-bdf8-c9ab7f3cb593"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 996, DateTimeKind.Utc).AddTicks(1229),
                            FullName = "Customer 14",
                            Password = "C23TAbso12hxTK0LzPYc8mRw+3wBBoljNRZkettaZPLru+th",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 996, DateTimeKind.Utc).AddTicks(1237),
                            Username = "Customer14"
                        },
                        new
                        {
                            Id = new Guid("7273e674-9db1-4149-b85a-47b41b3099ac"),
                            CreatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 998, DateTimeKind.Utc).AddTicks(8949),
                            FullName = "Customer 15",
                            Password = "DEBJbEuyZXb1DMoXb0JTXUVWv9p/tSEbgIZB8D+lNNvkU8Y+",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 12, 1, 45, 18, 998, DateTimeKind.Utc).AddTicks(8950),
                            Username = "Customer15"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Post", b =>
                {
                    b.HasOne("DataAccessLayer.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("post_userid_foreign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Transaction", b =>
                {
                    b.HasOne("DataAccessLayer.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("transaction_userid_foreign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("user_roleid_foreign");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
