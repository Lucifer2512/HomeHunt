// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(HomeHuntContext))]
    [Migration("20241124092237_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApartmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bathrooms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bedrooms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FurnitureCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("PropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("post_id_primary");

                    b.HasIndex("UserId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("role_id_primary");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f82ec39-63e6-4cd4-95d2-091a656ae301"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 681, DateTimeKind.Utc).AddTicks(1881),
                            Name = "Admin",
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 681, DateTimeKind.Utc).AddTicks(1890)
                        },
                        new
                        {
                            Id = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 681, DateTimeKind.Utc).AddTicks(1894),
                            Name = "Customer",
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 681, DateTimeKind.Utc).AddTicks(1894)
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TransactionCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("transaction_id_primary");

                    b.HasIndex("PostId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("user_id_primary");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("user_email_unique")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("user_Username_unique");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e8855fe-c1ea-42ff-9773-f46d05d02f8c"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 681, DateTimeKind.Utc).AddTicks(2023),
                            FullName = "Admin 1",
                            Password = "ZzTC4pDV4YTuklbaVpd6P0eu6U1hEiR2V3aL09N1F3SsI/CZ",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("8f82ec39-63e6-4cd4-95d2-091a656ae301"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 681, DateTimeKind.Utc).AddTicks(2024),
                            Username = "Admin1"
                        },
                        new
                        {
                            Id = new Guid("25094731-0dd2-4e34-b0b1-cc4f12d1218e"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 684, DateTimeKind.Utc).AddTicks(1337),
                            FullName = "Admin 2",
                            Password = "VaTRJ+GiXRygV180D67YAqqRt3ouHnObXW/LJzBeZSYGtVuW",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("8f82ec39-63e6-4cd4-95d2-091a656ae301"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 684, DateTimeKind.Utc).AddTicks(1337),
                            Username = "Admin2"
                        },
                        new
                        {
                            Id = new Guid("d86248fb-ea9b-4fcd-b662-194148cd95c9"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 687, DateTimeKind.Utc).AddTicks(1252),
                            FullName = "Customer 1",
                            Password = "ew/WcbTC9NDulDl9CNtvkP29WhOtnMy9Mlx4IvpmcHTpJcFQ",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 687, DateTimeKind.Utc).AddTicks(1252),
                            Username = "Customer1"
                        },
                        new
                        {
                            Id = new Guid("13ebfc3b-a208-48b2-bf17-eafbb47c8abf"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 690, DateTimeKind.Utc).AddTicks(944),
                            FullName = "Customer 2",
                            Password = "SGVpB8uWfV54Y+iMaHIoZqfdiBFPB3C1lcYNoaYNqCDtdgyH",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 690, DateTimeKind.Utc).AddTicks(945),
                            Username = "Customer2"
                        },
                        new
                        {
                            Id = new Guid("e2a039fe-a42f-47d2-a449-f95972ff9630"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 693, DateTimeKind.Utc).AddTicks(1365),
                            FullName = "Customer 3",
                            Password = "U4CbFXvLCzuyZiPynlPt5sGjXg13W3241+Qt+iGERLkN5ZMI",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 693, DateTimeKind.Utc).AddTicks(1366),
                            Username = "Customer3"
                        },
                        new
                        {
                            Id = new Guid("4942612a-10d2-4256-b7c1-7cfc9fcc8606"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 696, DateTimeKind.Utc).AddTicks(1299),
                            FullName = "Customer 4",
                            Password = "toeujrfk7dSbyCAYYzZEcCTtn6enKuv72dfFMjoMo/2ADrXk",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 696, DateTimeKind.Utc).AddTicks(1300),
                            Username = "Customer4"
                        },
                        new
                        {
                            Id = new Guid("343f69d9-58df-4138-9eed-e1c57d57c1c9"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 699, DateTimeKind.Utc).AddTicks(2108),
                            FullName = "Customer 5",
                            Password = "KZK77jGphy9IwrfPhlqtS4jEyjCv89nm0af8ss+BiKAGvJel",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 699, DateTimeKind.Utc).AddTicks(2108),
                            Username = "Customer5"
                        },
                        new
                        {
                            Id = new Guid("c792280c-0307-4dcd-ad2b-5c2e8bbfc99f"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 702, DateTimeKind.Utc).AddTicks(2329),
                            FullName = "Customer 6",
                            Password = "ebujxxFQaF9A0ldE3j9EGoZDHw4hZiEuWJr+6zsfIYSOOjkA",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 702, DateTimeKind.Utc).AddTicks(2333),
                            Username = "Customer6"
                        },
                        new
                        {
                            Id = new Guid("487c1f41-09ef-4709-a973-baf9791b2496"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 705, DateTimeKind.Utc).AddTicks(2148),
                            FullName = "Customer 7",
                            Password = "WvFFAK7zwWntkgtu+s7VuCTnut0XSBHSX1mYwiq6utGWvtwc",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 705, DateTimeKind.Utc).AddTicks(2152),
                            Username = "Customer7"
                        },
                        new
                        {
                            Id = new Guid("ead045a4-784d-4355-930c-88f97a4c1f3c"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 708, DateTimeKind.Utc).AddTicks(2899),
                            FullName = "Customer 8",
                            Password = "dAmbdlCjZ53JJMc8o5cSwu0cagVixX5MKRRzTcCfNqsLmfKg",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 708, DateTimeKind.Utc).AddTicks(2900),
                            Username = "Customer8"
                        },
                        new
                        {
                            Id = new Guid("8cb777ea-ed9b-4336-9feb-48deb536dfa1"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 711, DateTimeKind.Utc).AddTicks(3957),
                            FullName = "Customer 9",
                            Password = "/d+P3btvdjl4mNEjKwVQOy87tK+cTYG/hDLArg5zz8uHYhsz",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 711, DateTimeKind.Utc).AddTicks(3967),
                            Username = "Customer9"
                        },
                        new
                        {
                            Id = new Guid("ca24526e-bda1-43db-9ad7-49a03672a13d"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 714, DateTimeKind.Utc).AddTicks(4056),
                            FullName = "Customer 10",
                            Password = "4q5eUlnLZHNtV5mpQb3aCpCnXSFWq4XOwOV+4jy1kQbZoxOV",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 714, DateTimeKind.Utc).AddTicks(4057),
                            Username = "Customer10"
                        },
                        new
                        {
                            Id = new Guid("2a226b52-85e3-4980-b351-44c63c041a23"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 717, DateTimeKind.Utc).AddTicks(3946),
                            FullName = "Customer 11",
                            Password = "hJVacPPeEVlo2YZ8wd6jCk+ljjoY5fux1IaHbi0bCDFegfAC",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 717, DateTimeKind.Utc).AddTicks(3946),
                            Username = "Customer11"
                        },
                        new
                        {
                            Id = new Guid("c2b8dfee-321b-4bf6-8a45-ccff991d3315"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 720, DateTimeKind.Utc).AddTicks(3513),
                            FullName = "Customer 12",
                            Password = "ZGp8PfSLQjPB9buToepyzf5rw1xzHDwq2so+o6O2C+GNlMIR",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 720, DateTimeKind.Utc).AddTicks(3517),
                            Username = "Customer12"
                        },
                        new
                        {
                            Id = new Guid("285c2b83-1372-4f7e-a4f1-9ba5d285f745"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 723, DateTimeKind.Utc).AddTicks(3679),
                            FullName = "Customer 13",
                            Password = "RWF0WXYf2rT1TlVB+38GFBxSPZ7OKckbPdfSD3OkkDt2y5BH",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 723, DateTimeKind.Utc).AddTicks(3679),
                            Username = "Customer13"
                        },
                        new
                        {
                            Id = new Guid("a4de10b4-0586-46c9-8b21-fcd06ac6aff3"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 726, DateTimeKind.Utc).AddTicks(3440),
                            FullName = "Customer 14",
                            Password = "Ythpq0XRAV8+4XWDJUkg3O20ERUZYj1eFoaGfcxfOv4JMVdS",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 726, DateTimeKind.Utc).AddTicks(3440),
                            Username = "Customer14"
                        },
                        new
                        {
                            Id = new Guid("6ea8b671-c546-48c4-8f33-b822d4ea90a1"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 729, DateTimeKind.Utc).AddTicks(2905),
                            FullName = "Customer 15",
                            Password = "UZSosDsrZZNYjjhq4rPn7Qmx81boFcnDOQMYQ1l7x4wbpEWT",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 22, 36, 729, DateTimeKind.Utc).AddTicks(2905),
                            Username = "Customer15"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Post", b =>
                {
                    b.HasOne("DataAccessLayer.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("post_userid_foreign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Transaction", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Post", "Post")
                        .WithOne("Transaction")
                        .HasForeignKey("DataAccessLayer.Models.Transaction", "PostId")
                        .IsRequired()
                        .HasConstraintName("post_transactionid_foreign");

                    b.HasOne("DataAccessLayer.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("transaction_userid_foreign");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("user_roleid_foreign");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Post", b =>
                {
                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
