// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(HomeHuntContext))]
    [Migration("20241124093155_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApartmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bathrooms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bedrooms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FurnitureCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("PropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("post_id_primary");

                    b.HasIndex("UserId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("role_id_primary");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f82ec39-63e6-4cd4-95d2-091a656ae301"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 556, DateTimeKind.Utc).AddTicks(1377),
                            Name = "Admin",
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 556, DateTimeKind.Utc).AddTicks(1388)
                        },
                        new
                        {
                            Id = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 556, DateTimeKind.Utc).AddTicks(1392),
                            Name = "Customer",
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 556, DateTimeKind.Utc).AddTicks(1392)
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TransactionCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("transaction_id_primary");

                    b.HasIndex("PostId")
                        .IsUnique()
                        .HasFilter("[PostId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("user_id_primary");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("user_email_unique")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("user_Username_unique");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6722eb35-3f74-4a70-9f2e-a0be5b80debf"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 556, DateTimeKind.Utc).AddTicks(1523),
                            FullName = "Admin 1",
                            Password = "iFmI6rpDXtyfU3HmAyz36LuCs4ySDIkhMcZBsbFiBE/1QQuW",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("8f82ec39-63e6-4cd4-95d2-091a656ae301"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 556, DateTimeKind.Utc).AddTicks(1523),
                            Username = "Admin1"
                        },
                        new
                        {
                            Id = new Guid("915905ba-f8a2-47e8-a619-5c426379e81f"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 558, DateTimeKind.Utc).AddTicks(9170),
                            FullName = "Admin 2",
                            Password = "FI2dqNLlWd9oyuQ25rJWkXL0ERp8Tx2Jii8qkCKv2OEW2ovM",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("8f82ec39-63e6-4cd4-95d2-091a656ae301"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 558, DateTimeKind.Utc).AddTicks(9171),
                            Username = "Admin2"
                        },
                        new
                        {
                            Id = new Guid("6fd9d888-fae7-446a-a969-f106711d166a"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 561, DateTimeKind.Utc).AddTicks(7641),
                            FullName = "Customer 1",
                            Password = "uU7Y2wTUsFhnepX+K0SQQVmPqnQNf8HOsMLZqlDljPd8KZjZ",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 561, DateTimeKind.Utc).AddTicks(7644),
                            Username = "Customer1"
                        },
                        new
                        {
                            Id = new Guid("8dcb57f1-e75d-4fd3-b9ab-88e61f6cdb89"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 564, DateTimeKind.Utc).AddTicks(5526),
                            FullName = "Customer 2",
                            Password = "PqUracNwtA34Il7gvpJp0BnB9evGU5SRit7OnQgR2e4bpRxA",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 564, DateTimeKind.Utc).AddTicks(5526),
                            Username = "Customer2"
                        },
                        new
                        {
                            Id = new Guid("590b72e7-152d-4b73-9c53-364a831bfc2b"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 567, DateTimeKind.Utc).AddTicks(3173),
                            FullName = "Customer 3",
                            Password = "Thdi3i5V8IuyiWsm3TcFf8C2AVK3soL4xzLEFMMedU0Lfqi3",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 567, DateTimeKind.Utc).AddTicks(3174),
                            Username = "Customer3"
                        },
                        new
                        {
                            Id = new Guid("78421daf-d7a0-490a-a9e1-5a65b044ed83"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 570, DateTimeKind.Utc).AddTicks(844),
                            FullName = "Customer 4",
                            Password = "4DB06kgqx8/hgEl9NK43Bn04C4ipZqmWNgmv5LYGugBsNWw1",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 570, DateTimeKind.Utc).AddTicks(845),
                            Username = "Customer4"
                        },
                        new
                        {
                            Id = new Guid("436f062d-fcba-4010-b045-6d57a4c244e9"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 572, DateTimeKind.Utc).AddTicks(9046),
                            FullName = "Customer 5",
                            Password = "gLefSI60VXYuj9xgnrhdCAEdUyryWeBPpgoTbBvzMhXymff9",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 572, DateTimeKind.Utc).AddTicks(9046),
                            Username = "Customer5"
                        },
                        new
                        {
                            Id = new Guid("0d41ed62-f11c-4359-a274-0820db174d3a"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 575, DateTimeKind.Utc).AddTicks(6380),
                            FullName = "Customer 6",
                            Password = "UKu1WzmKvu6YDMwvc6Di+rdYNJhdwd+SLe6odutFPHzHJEiL",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 575, DateTimeKind.Utc).AddTicks(6380),
                            Username = "Customer6"
                        },
                        new
                        {
                            Id = new Guid("59729a30-4b6d-4d75-abab-4d657e76dc25"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 578, DateTimeKind.Utc).AddTicks(3813),
                            FullName = "Customer 7",
                            Password = "luiO+ImDZucnP6JcLcXeVdTOk/Y5uDntgaIdbCxfzVXXrtZL",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 578, DateTimeKind.Utc).AddTicks(3813),
                            Username = "Customer7"
                        },
                        new
                        {
                            Id = new Guid("16b67611-f69b-437e-87d2-c43726444e54"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 581, DateTimeKind.Utc).AddTicks(2218),
                            FullName = "Customer 8",
                            Password = "AhmrEUsub2zGcjMToGyTOUnUFNyLz0jw5HwmVrC91Cga5JDK",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 581, DateTimeKind.Utc).AddTicks(2220),
                            Username = "Customer8"
                        },
                        new
                        {
                            Id = new Guid("164051b5-05a6-4537-8422-2f95f28b0dee"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 583, DateTimeKind.Utc).AddTicks(9851),
                            FullName = "Customer 9",
                            Password = "yS7z+Z+8X77L9WMWyyQs3znxXE+wO1mmZAqyH30YErLnadl2",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 583, DateTimeKind.Utc).AddTicks(9851),
                            Username = "Customer9"
                        },
                        new
                        {
                            Id = new Guid("4312b50d-a8f6-4af1-963e-4554046e7f7c"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 586, DateTimeKind.Utc).AddTicks(7303),
                            FullName = "Customer 10",
                            Password = "b/29AhnRuWVkko/+TScUQSPtniKansl1KoDGTNf2OzvXDb2Q",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 586, DateTimeKind.Utc).AddTicks(7303),
                            Username = "Customer10"
                        },
                        new
                        {
                            Id = new Guid("b855f2cc-c03c-4b08-8b8e-b07440c681a6"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 589, DateTimeKind.Utc).AddTicks(5091),
                            FullName = "Customer 11",
                            Password = "hV3R8RffUx4AKiY9mMt7gQFIbZezBlYPJOclg6rpiMMVIVQO",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 589, DateTimeKind.Utc).AddTicks(5092),
                            Username = "Customer11"
                        },
                        new
                        {
                            Id = new Guid("2046f97c-964c-40e3-9079-2519a1c8651a"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 592, DateTimeKind.Utc).AddTicks(3224),
                            FullName = "Customer 12",
                            Password = "akQN65Ph9ZuFd91ogoUlsoxl6s7BZU4meuhcbbzz4Mq2BO35",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 592, DateTimeKind.Utc).AddTicks(3225),
                            Username = "Customer12"
                        },
                        new
                        {
                            Id = new Guid("39fdab54-434b-458d-a906-2664afa782de"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 595, DateTimeKind.Utc).AddTicks(3085),
                            FullName = "Customer 13",
                            Password = "55gXMvC7TBv9c/IQr5Op0eG/2M6uCv0HcNHHOri0/exKWTwD",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 595, DateTimeKind.Utc).AddTicks(3088),
                            Username = "Customer13"
                        },
                        new
                        {
                            Id = new Guid("8ea53a34-702f-4112-b70a-0d836d4b16e5"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 598, DateTimeKind.Utc).AddTicks(565),
                            FullName = "Customer 14",
                            Password = "t/htBCHJK+Wljk6VszXyoGdCaE5nsnUcOsIWj0/c2xu64Ot1",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 598, DateTimeKind.Utc).AddTicks(566),
                            Username = "Customer14"
                        },
                        new
                        {
                            Id = new Guid("83495983-2957-45af-adcb-7e29cbbb051e"),
                            CreatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 600, DateTimeKind.Utc).AddTicks(7864),
                            FullName = "Customer 15",
                            Password = "fFOofTnQkbTypM8X92XJ+IMQaSZehTqvm9l5p5lvto5QNDFH",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 16, 31, 55, 600, DateTimeKind.Utc).AddTicks(7864),
                            Username = "Customer15"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Post", b =>
                {
                    b.HasOne("DataAccessLayer.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("post_userid_foreign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Transaction", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Post", "Post")
                        .WithOne("Transaction")
                        .HasForeignKey("DataAccessLayer.Models.Transaction", "PostId")
                        .HasConstraintName("post_transactionid_foreign");

                    b.HasOne("DataAccessLayer.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("transaction_userid_foreign");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("user_roleid_foreign");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Post", b =>
                {
                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
