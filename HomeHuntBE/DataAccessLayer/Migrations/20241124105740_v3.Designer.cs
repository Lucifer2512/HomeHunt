// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(HomeHuntContext))]
    [Migration("20241124105740_v3")]
    partial class v3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApartmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bathrooms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bedrooms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FurnitureCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("post_id_primary");

                    b.HasIndex("UserId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("role_id_primary");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f82ec39-63e6-4cd4-95d2-091a656ae301"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 403, DateTimeKind.Utc).AddTicks(8151),
                            Name = "Admin",
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 403, DateTimeKind.Utc).AddTicks(8161)
                        },
                        new
                        {
                            Id = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 403, DateTimeKind.Utc).AddTicks(8165),
                            Name = "Customer",
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 403, DateTimeKind.Utc).AddTicks(8165)
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TransactionCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("transaction_id_primary");

                    b.HasIndex("PostId")
                        .IsUnique()
                        .HasFilter("[PostId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("user_id_primary");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("user_email_unique")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("user_Username_unique");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2fd2967-8017-4024-a03b-a273f9971a66"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 403, DateTimeKind.Utc).AddTicks(8318),
                            FullName = "Admin 1",
                            Password = "qVChB0NNRjpdK1le3EeY0OISsp8Ev7JdywAzn/Vgtr7Vr0Td",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("8f82ec39-63e6-4cd4-95d2-091a656ae301"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 403, DateTimeKind.Utc).AddTicks(8319),
                            Username = "Admin1"
                        },
                        new
                        {
                            Id = new Guid("1c1999ca-01b7-4936-bda9-ce1bf5671dd9"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 406, DateTimeKind.Utc).AddTicks(7811),
                            FullName = "Admin 2",
                            Password = "/f1FvU3Ajhr8q3T8+ZWQbbOwKQwW6KKcE1QI3dwRLWZTlPBo",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("8f82ec39-63e6-4cd4-95d2-091a656ae301"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 406, DateTimeKind.Utc).AddTicks(7812),
                            Username = "Admin2"
                        },
                        new
                        {
                            Id = new Guid("7f1edd88-ea8f-4d50-944b-277d35047376"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 409, DateTimeKind.Utc).AddTicks(7144),
                            FullName = "Customer 1",
                            Password = "aD8GuXdvl5tI4NNVYMvXnzoAdB+Ken+6ITLgKxM1NapksSdE",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 409, DateTimeKind.Utc).AddTicks(7146),
                            Username = "Customer1"
                        },
                        new
                        {
                            Id = new Guid("1b50e379-ab7c-481b-973f-a5ce11c0847e"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 412, DateTimeKind.Utc).AddTicks(6241),
                            FullName = "Customer 2",
                            Password = "3wlrI7Gcrv+gs6dV0AKg9Vyv6zCS90ETApMZdCU7U3R9O8eA",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 412, DateTimeKind.Utc).AddTicks(6241),
                            Username = "Customer2"
                        },
                        new
                        {
                            Id = new Guid("1dff6f90-3218-44ac-8c0f-64dc4839b638"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 415, DateTimeKind.Utc).AddTicks(5959),
                            FullName = "Customer 3",
                            Password = "j70+px4CcpgNlxx0+u4kLReXYN7Kb+wSXZfAu7/WTX8CzS7v",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 415, DateTimeKind.Utc).AddTicks(5963),
                            Username = "Customer3"
                        },
                        new
                        {
                            Id = new Guid("0250cf6e-5d7c-4c54-ad02-022a2da5dab6"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 418, DateTimeKind.Utc).AddTicks(5379),
                            FullName = "Customer 4",
                            Password = "bDty53oH0u6fxpd9ibcYbdJhNkspNmudmurIqgyU4p+lx6VP",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 418, DateTimeKind.Utc).AddTicks(5380),
                            Username = "Customer4"
                        },
                        new
                        {
                            Id = new Guid("276ab3f7-2e96-4b3e-9fd1-e94a323d8117"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 421, DateTimeKind.Utc).AddTicks(3824),
                            FullName = "Customer 5",
                            Password = "SOMtZ4dBJ4JVch82uBU6yRP/hA3WYp/eD5ws7GDz47Xzm8ry",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 421, DateTimeKind.Utc).AddTicks(3825),
                            Username = "Customer5"
                        },
                        new
                        {
                            Id = new Guid("1dd00cbb-9515-4a31-8efa-223e78a8919d"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 424, DateTimeKind.Utc).AddTicks(1285),
                            FullName = "Customer 6",
                            Password = "OqggDAUyyiMb7Nn1TOxQCHPB+uMBrvx3IlEu5qCdeekF08pJ",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 424, DateTimeKind.Utc).AddTicks(1286),
                            Username = "Customer6"
                        },
                        new
                        {
                            Id = new Guid("265ec730-f37c-4c8a-b334-9bd587e59fbd"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 426, DateTimeKind.Utc).AddTicks(8666),
                            FullName = "Customer 7",
                            Password = "dveNkHLQAICMT6uuxgTAK2aHfv4GF9zVkDkfhv4lvsyCya8d",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 426, DateTimeKind.Utc).AddTicks(8666),
                            Username = "Customer7"
                        },
                        new
                        {
                            Id = new Guid("5b6041f7-ded3-4257-9c97-af60fdfce06c"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 429, DateTimeKind.Utc).AddTicks(6000),
                            FullName = "Customer 8",
                            Password = "ZlcqWRZdOYOh1ZIIEXkrre+7MtsADs4kCRnCtpZ5f1wW6egq",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 429, DateTimeKind.Utc).AddTicks(6001),
                            Username = "Customer8"
                        },
                        new
                        {
                            Id = new Guid("8b908bbe-2ad1-4aa8-8e16-3ef3f577859e"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 432, DateTimeKind.Utc).AddTicks(4199),
                            FullName = "Customer 9",
                            Password = "ZovKir7yi9sPF0huE1AHz2Op2QljRzwE3aQA+8uzJ/Ga9c6b",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 432, DateTimeKind.Utc).AddTicks(4199),
                            Username = "Customer9"
                        },
                        new
                        {
                            Id = new Guid("17833b13-2d9e-4891-b66e-a6769a6255ea"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 435, DateTimeKind.Utc).AddTicks(1671),
                            FullName = "Customer 10",
                            Password = "T2b0ACCL7zDHVk9CrdhTlOXvQXspFEJ/u9qUVaUdmyLGXbu7",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 435, DateTimeKind.Utc).AddTicks(1671),
                            Username = "Customer10"
                        },
                        new
                        {
                            Id = new Guid("17c12695-d177-4fab-9351-c6061c5575bb"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 437, DateTimeKind.Utc).AddTicks(9176),
                            FullName = "Customer 11",
                            Password = "k47XA/lSnqLXYS+7r6QUqjDYngu7h13xQV0eV25dYaZV1Of9",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 437, DateTimeKind.Utc).AddTicks(9176),
                            Username = "Customer11"
                        },
                        new
                        {
                            Id = new Guid("fd43fc8a-8f1e-4dc7-8e56-1000ca7911a4"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 440, DateTimeKind.Utc).AddTicks(7240),
                            FullName = "Customer 12",
                            Password = "oNFR5fQjydF/GL5mMevRjAiPwDf5fQDmK/31KozZ9wwbKbel",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 440, DateTimeKind.Utc).AddTicks(7240),
                            Username = "Customer12"
                        },
                        new
                        {
                            Id = new Guid("a86e9178-afe9-4aaf-8b4a-1059381d5699"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 443, DateTimeKind.Utc).AddTicks(4776),
                            FullName = "Customer 13",
                            Password = "fzghfAIN9zVEg9E5YEmn0zfhaxxr3wn1wOToKFtjmexIqeIe",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 443, DateTimeKind.Utc).AddTicks(4777),
                            Username = "Customer13"
                        },
                        new
                        {
                            Id = new Guid("52838559-5c0c-45cb-ac92-f88e72fd7e70"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 446, DateTimeKind.Utc).AddTicks(2086),
                            FullName = "Customer 14",
                            Password = "2n0ikdoMkchyQ9ddtjXhEr9m8okiQUvC7ZQbtRugJhbTbpwy",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 446, DateTimeKind.Utc).AddTicks(2086),
                            Username = "Customer14"
                        },
                        new
                        {
                            Id = new Guid("5737d160-fefb-416f-b291-ab53cbcf62b7"),
                            CreatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 449, DateTimeKind.Utc).AddTicks(398),
                            FullName = "Customer 15",
                            Password = "msBqN0g9LUudYexLkSBkqm1vzfMmCgDXB9Ss4aHPO85TQp0a",
                            PhoneNumber = "123456789",
                            RoleId = new Guid("bcadf39b-13b8-4958-8472-61f4c993fbe5"),
                            UpdatedDate = new DateTime(2024, 11, 24, 17, 57, 40, 449, DateTimeKind.Utc).AddTicks(401),
                            Username = "Customer15"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Post", b =>
                {
                    b.HasOne("DataAccessLayer.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("post_userid_foreign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Transaction", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Post", "Post")
                        .WithOne("Transaction")
                        .HasForeignKey("DataAccessLayer.Models.Transaction", "PostId")
                        .HasConstraintName("post_transactionid_foreign");

                    b.HasOne("DataAccessLayer.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("transaction_userid_foreign");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("user_roleid_foreign");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Post", b =>
                {
                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
